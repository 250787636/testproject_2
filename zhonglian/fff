import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

/**
 * @author : chenxinghan
 */
public class AESUtil {
    private static final String DEFAULT_ENCODING = "utf-8";

    public static void main(String[] args) {
        System.out.println( AESUtil.encrypt("1234567890123456","13580000000"));
        System.out.println( AESUtil.decrypt("1234567890123456","meyh6X6DXPRxFLOWQMeOMw=="));
    }

    public static String decrypt(String dataPassword, String encrypted) {
        try {
            byte[] byteMi = Base64.getDecoder().decode(encrypted);
            SecretKeySpec key = new SecretKeySpec(dataPassword.getBytes(DEFAULT_ENCODING), "AES");
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            cipher.init(Cipher.DECRYPT_MODE, key, new IvParameterSpec(new byte[cipher.getBlockSize()]));
            byte[] decryptedData = cipher.doFinal(byteMi);
            return new String(decryptedData, DEFAULT_ENCODING);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public static String encrypt(String dataPassword, String cleartext) {
        try {
            SecretKeySpec key = new SecretKeySpec(dataPassword.getBytes(DEFAULT_ENCODING), "AES");
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            cipher.init(Cipher.ENCRYPT_MODE, key, new IvParameterSpec(new byte[cipher.getBlockSize()]));
            byte[] encryptedData = cipher.doFinal(cleartext.getBytes(DEFAULT_ENCODING));
            return Base64.getEncoder().encodeToString(encryptedData);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

}
